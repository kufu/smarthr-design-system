---
import { SITE_TITLE, SITE_DESCRIPTION, SITE_AUTHOR } from '@/constants/site';
import { createOgImageUrl } from '@/lib/createOgImageUrl';

export type Meta = {
  name: string;
  content: string;
};

export type Props = {
  title?: string;
  ogTitle?: string;
  description?: string;
  meta?: Meta[];
};

const { ogTitle, meta } = Astro.props;
const currentUrl = Astro.url.toString();
const pageTitle = Astro.props.title ? `${Astro.props.title} | ${SITE_TITLE}` : SITE_TITLE;
const pageDescription = Astro.props.description || SITE_DESCRIPTION;
const ogImageUrl = createOgImageUrl(ogTitle);
---

<head>
  <meta charset="UTF-8" />
  <meta name="description" content={pageDescription} />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
  <meta name="generator" content={Astro.generator} />
  <title>{pageTitle}</title>
  <meta name="description" content={pageDescription} />
  <meta property="og:title" content={pageTitle} />
  <meta property="og:description" content={pageDescription} />
  <meta property="og:type" content="website" />
  <meta property="og:image" content={ogImageUrl} />
  <meta property="og:locale" content="ja_JP" />
  <meta property="og:url" content={currentUrl} />
  <meta property="og:site_name" content={SITE_TITLE} />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:site" content={SITE_AUTHOR} />
  <meta name="twitter:title" content={pageTitle} />
  <meta name="twitter:description" content={pageDescription} />
  {meta && meta.map((item) => <meta name={item.name} content={item.content} />)}
  <link rel="icon" href="/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png" />
  <link rel="manifest" href="/manifest.webmanifest" />
  <meta name="apple-mobile-web-app-title" content={SITE_TITLE} />
  <meta name="application-name" content={SITE_TITLE} />

  <!-- Google Tag Manager -->
  <script is:inline type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-HNCBKCD85V"></script>
  <script is:inline type="text/partytown">
    if (!(navigator.doNotTrack === '1' || window.doNotTrack === '1')) {
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        // eslint-disable-next-line prefer-rest-params, @typescript-eslint/no-unused-expressions
        window.dataLayer && window.dataLayer.push(arguments);
      }
      gtag('js', new Date());
      gtag('config', 'G-HNCBKCD85V');
    }
  </script>
</head>
