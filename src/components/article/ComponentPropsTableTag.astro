---
const TYPE_COLOR = {
  string: '#1376a0',
  number: '#378445',
  boolean: '#a53f3f',
  literal: '#6e4ca6',
  func: '#76533e',
  other: '#4e4c49',
} as const;

const pickType = (typeValue: string): keyof typeof TYPE_COLOR => {
  if (typeValue === 'string') return 'string';
  if (typeValue === 'number') return 'number';
  if (typeValue === 'true' || typeValue === 'false') return 'boolean';
  if (/^".*"$/g.test(typeValue)) return 'literal';
  if (/^\(.*\)\s*=>\s*.+$/g.test(typeValue)) return 'func'; // 予約語を避けるため、これのみ省略
  return 'other';
};

const pickTypeColor = (value: string): string => TYPE_COLOR[pickType(value)];

type Props = {
  content: string;
};

const { content } = Astro.props;
---

<span
  style={{
    backgroundColor: pickTypeColor(content),
  }}
>
  {content}
</span>

<style lang="scss">
  span {
    word-break: break-word;
    font-size: var(--font-size-14);
    color: var(--color-white);
    padding: 4px 8px;
    border-radius: 8px;
  }
</style>
