import React, { useState } from 'react'
import styled, { ThemeProvider, css } from 'styled-components'

import {
  Button,
  CheckBox,
  Cluster,
  Heading,
  Input,
  RadioButton,
  ThemeProvider as SHRThemeProvider,
  SmartHRLogo,
  Stack,
  TabBar,
  TabItem,
  Text,
  createTheme,
} from 'smarthr-ui'
import { CreatedTheme } from 'smarthr-ui/lib/themes/createTheme'

import { Header, padding } from '../../../../../src/components/ComponentPreview/ProductWrapper'

const defaultTheme = createTheme()
const nstockTheme = createTheme({
  color: {
    BRAND: 'hsl(220, 33%, 1%)',
    MAIN: 'hsl(220, 33%, 1%)',
    TEXT_BLACK: 'hsl(220, 25%, 8%)',
  },
})

const themes = {
  SmartHR: {
    theme: defaultTheme,
    logo: <SmartHRLogo />,
  },
  Nstock: {
    theme: nstockTheme,
    logo: (
      <svg width="135" height="27" viewBox="0 0 135 27" fill="white" xmlns="http://www.w3.org/2000/svg" aria-label="Nstock">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M13.4969 1.09965C18.0513 1.09546 22.5513 0.89558 26.9969 0.5V14.1162L-0.00314331 10.0002V0.5C4.44245 0.903954 8.94244 1.10384 13.4969 1.09965ZM50.5244 3.87187V16.5932L42.4497 3.87187H38.095V23.7169H42.4528V11.4067L50.5244 23.7169H54.8728V3.87187H50.5244ZM128.288 15.1554L134.786 23.7169H129.449L124.228 16.496V23.7169H119.861V4.53121H124.216V14.2041L129.116 7.5483H134.083L128.288 15.1554ZM84.8209 19.8489C85.5641 21.1331 86.6218 22.2071 87.8945 22.9696C89.1396 23.7273 90.5689 24.1282 92.0262 24.1282C93.4835 24.1282 94.9128 23.7273 96.1579 22.9696C97.4306 22.2071 98.4883 21.1331 99.2315 19.8489C99.9855 18.5718 100.383 17.1157 100.383 15.6325C100.383 14.1493 99.9855 12.6932 99.2315 11.4161C98.4883 10.1309 97.4306 9.05595 96.1579 8.29226C94.9128 7.53447 93.4835 7.13365 92.0262 7.13365C90.5689 7.13365 89.1396 7.53447 87.8945 8.29226C86.6215 9.05595 85.5637 10.1309 84.8209 11.4161C84.0666 12.6932 83.6687 14.1493 83.6687 15.6325C83.6687 17.1157 84.0666 18.5718 84.8209 19.8489ZM96.0293 15.6325C96.0293 16.8083 95.6283 17.949 94.8926 18.8662C94.5294 19.2655 94.087 19.5846 93.5932 19.8029C93.0998 20.0213 92.5659 20.134 92.0262 20.134C91.4865 20.134 90.9526 20.0213 90.4588 19.8029C89.9654 19.5846 89.523 19.2655 89.1598 18.8662C88.4241 17.949 88.0228 16.8083 88.0228 15.6325C88.0228 14.4566 88.4241 13.3159 89.1598 12.3988C89.523 11.9994 89.9654 11.6804 90.4588 11.462C90.9526 11.2437 91.4865 11.1309 92.0262 11.1309C92.5659 11.1309 93.0998 11.2437 93.5932 11.462C94.087 11.6804 94.5294 11.9994 94.8926 12.3988C95.6283 13.3159 96.0293 14.4566 96.0293 15.6325ZM58.6244 21.4501C59.21 22.3116 60.0244 22.9923 60.9761 23.4155C62.078 23.9086 63.2758 24.152 64.4827 24.1282C66.532 24.1282 68.1216 23.651 69.2519 22.6965C69.8071 22.2418 70.2503 21.6656 70.5476 21.0124C70.8449 20.3592 70.988 19.6464 70.9661 18.9291C71.0059 18.0012 70.7228 17.0881 70.1655 16.3452C69.6647 15.7059 69.0191 15.1947 68.2816 14.854C67.3748 14.4617 66.4436 14.1283 65.4939 13.8556C64.6933 13.6424 63.9161 13.35 63.1736 12.9828C62.9616 12.8889 62.7811 12.7359 62.6538 12.5422C62.5262 12.3485 62.4571 12.1221 62.4547 11.8902C62.4517 11.706 62.4938 11.5237 62.5775 11.3595C62.6612 11.1953 62.7841 11.0541 62.935 10.9484C63.3524 10.6787 63.8459 10.551 64.3417 10.5842C65.6225 10.5842 66.3383 11.2121 66.4892 12.4679H70.7903C70.7103 11.4997 70.3859 10.5676 69.8483 9.75852C69.2955 8.92769 68.5256 8.26423 67.6225 7.84023C66.5961 7.35791 65.4723 7.11835 64.3386 7.14012C63.1861 7.11066 62.0402 7.32463 60.9761 7.76804C60.1087 8.13234 59.3646 8.73825 58.8316 9.51363C58.3382 10.2573 58.081 11.1328 58.0939 12.0253C58.0554 12.919 58.3271 13.7986 58.863 14.5149C59.3541 15.1436 59.9852 15.6489 60.7061 15.9905C61.5931 16.3936 62.508 16.7325 63.4436 17.0045C64.2742 17.2358 65.0791 17.5514 65.8456 17.9464C66.0767 18.0594 66.2715 18.2355 66.4068 18.4544C66.5425 18.6732 66.6134 18.926 66.6113 19.1834C66.6113 19.3923 66.56 19.598 66.4628 19.7828C66.3656 19.9677 66.2249 20.1261 66.0528 20.2445C65.5897 20.5537 65.0386 20.7035 64.4827 20.6715C63.8546 20.6955 63.2374 20.5001 62.7372 20.119C62.5134 19.9414 62.3308 19.7177 62.2012 19.463C62.0716 19.2084 61.9987 18.9288 61.9869 18.6434H57.7267C57.7587 19.6443 58.0699 20.6164 58.6244 21.4501ZM81.788 19.9526C81.5393 20.0365 81.2781 20.0758 81.0158 20.0688C80.7094 20.1027 80.3995 20.0666 80.1093 19.9633C79.819 19.8599 79.5561 19.692 79.3401 19.4722C79.1245 19.2524 78.9611 18.9865 78.8632 18.6944C78.765 18.4024 78.7346 18.0919 78.7741 17.7863V11.3848H81.788V7.54829H78.7741V4.53121H74.4194V7.54829H72.74V11.3848H74.4194V18.2322C74.4194 20.0489 74.9324 21.4858 75.9577 22.5427C76.4721 23.0691 77.091 23.482 77.7745 23.7551C78.4579 24.0281 79.1909 24.1552 79.9264 24.1282C80.5518 24.1215 81.1751 24.0553 81.788 23.9304V19.9526ZM113.209 18.6591C113.444 18.347 113.637 18.0049 113.783 17.6419L117.645 19.1144C117.399 19.6884 117.093 20.2347 116.731 20.7438C116.022 21.7549 115.091 22.5903 114.009 23.1864C112.885 23.8167 111.615 24.1415 110.326 24.1282C108.87 24.1381 107.44 23.7436 106.195 22.9886C104.922 22.2261 103.864 21.1521 103.121 19.8679C102.367 18.5907 101.969 17.1347 101.969 15.6515C101.969 14.1683 102.367 12.7122 103.121 11.4351C103.864 10.1499 104.922 9.07494 106.195 8.31121C107.438 7.54954 108.868 7.14846 110.326 7.15274C111.615 7.1411 112.884 7.46574 114.009 8.09461C115.09 8.69154 116.021 9.52685 116.731 10.5372C117.09 11.0478 117.396 11.5938 117.645 12.1666L113.777 13.6516C113.633 13.2871 113.442 12.943 113.209 12.6281C112.9 12.2089 112.507 11.8583 112.056 11.5983C111.531 11.2944 110.933 11.1413 110.326 11.1557C109.786 11.1416 109.248 11.2469 108.753 11.4639C108.258 11.681 107.816 12.0045 107.46 12.4115C106.724 13.3287 106.323 14.4693 106.323 15.6452C106.323 16.821 106.724 17.9617 107.46 18.8789C107.817 19.2854 108.258 19.6085 108.754 19.8255C109.249 20.0425 109.786 20.1481 110.326 20.1347C110.933 20.1495 111.532 19.9951 112.056 19.6889C112.508 19.4296 112.9 19.0789 113.209 18.6591ZM-1.22068e-05 27.5C4.44557 27.1023 8.94556 26.9025 13.5 26.9004C18.0544 26.8983 22.5544 27.0982 27 27.5V17.9841L-1.22068e-05 13.8713V27.5Z"
        />
      </svg>
    ),
  },
} as const

export const PreviewThemeSwitch = () => {
  // const [themeName, setThemeName] = useState<string>('SmartHR')
  // const [theme, setTheme] = useState<CreatedTheme>(themes.SmartHR.theme)
  const [themeInfo, setThemeInfo] = useState<{
    name: string
    theme: CreatedTheme
    logo: JSX.Element
  }>({ ...themes.SmartHR, name: 'SmartHR' })

  return (
    <ThemeProvider theme={themeInfo.theme}>
      <SHRThemeProvider theme={themeInfo.theme}>
        <Stack gap={0}>
          <Header>{themeInfo.logo}</Header>
          <TabBar>
            {Object.entries(themes).map(([key, theme]) => (
              <TabItem
                key={key}
                id={key}
                onClick={() => {
                  setThemeInfo({
                    ...theme,
                    name: key,
                  })
                }}
                selected={themeInfo.name === key}
              >
                {key}
              </TabItem>
            ))}
          </TabBar>
          <Content>
            <Heading tag="h2">ThemeProvider の利用例</Heading>
            <LabelGroup>
              <Heading type="blockTitle" tag="h3">
                評価テンプレート名
              </Heading>
              <Input />
            </LabelGroup>
            <FieldsetGroup>
              <Legend>添付書類</Legend>
              <CheckBox defaultChecked>デフォルトの色を復元</CheckBox>
            </FieldsetGroup>
            <FieldsetGroup>
              <Legend>公文書の有無</Legend>
              <Cluster>
                <RadioButton defaultChecked name="sample-radio">
                  あり
                </RadioButton>
                <RadioButton name="sample-radio">なし</RadioButton>
              </Cluster>
            </FieldsetGroup>
            {/* Buttonのstretch防止用div */}
            <div>
              <Button variant="primary">保存</Button>
            </div>
          </Content>
        </Stack>
      </SHRThemeProvider>
    </ThemeProvider>
  )
}

const Content = styled(Stack).attrs({ gap: 1.5 })`
  ${({ theme: { space } }) => css`
    ${padding};
    padding-block: ${space(2)};
  `}
`
const LabelGroup = styled(Stack).attrs({ as: 'label', gap: 0.5 })`
  cursor: pointer;
`
const FieldsetGroup = styled(Stack).attrs({ as: 'fieldset', gap: 0.5 })`
  border: unset;
  margin: unset;
  padding: unset;
`
const Legend = styled(Text).attrs({ forwardedAs: 'legend', weight: 'bold', leading: 'TIGHT' })``
